# Server Configuration
quarkus.http.port=8082

# Application Config
quarkus.application.name=shipments-producer

# Kafka Producer Configuration x vertx-kafka-client
kafka.producer.bootstrap-servers=kafka:29092
kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
kafka.producer.retries=20
kafka.producer.acks=all
kafka.producer.compression-type=snappy
kafka.producer.linger-ms=0
kafka.producer.batch-size=32768
kafka.producer.buffer-memory=33554432
kafka.producer.enable-idempotence=true
kafka.producer.max-in-flight-requests-per-connection=5
kafka.producer.topic=shipment-topic-v0.0.1

# Log Configuration
quarkus.log.level=INFO
quarkus.log.category."it.eda.shipments.producer".level=INFO

quarkus.vertx.event-loops-pool-size=20
quarkus.vertx.worker-pool-size=20
quarkus.vertx.max-event-loop-execute-time=3000000


quarkus.micrometer.export.prometheus.enabled=true
quarkus.micrometer.export.prometheus.path=/metrics

quarkus.log.console.format=%d{HH:mm:ss} %-5p traceId=%X{traceId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{2.}] (%t) %s%e%n


quarkus.otel.exporter.otlp.traces.endpoint=http://jaeger:4317


quarkus.redis.hosts=redis://redis:6379
quarkus.http.cors=true
quarkus.http.cors.origins=*
quarkus.http.cors.methods=GET,POST,PUT
quarkus.http.cors.headers=accept, authorization, content-type, x-requested-with, sessionid

# Abilita il logging GELF
quarkus.log.handler.gelf.enabled=true

quarkus.log.handler.gelf.host=logstash
quarkus.log.handler.gelf.port=12201

quarkus.log.handler.gelf.additional-field.application-name=shipments-producer
quarkus.log.handler.gelf.additional-field.environment=dev

quarkus.log.handler.gelf.timestamp-pattern=yyyy-MM-dd'T'HH:mm:ss.SSSZZZZZ





